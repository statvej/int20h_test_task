openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0

paths:
  /api/quest{questId}:
    get:
      tags:
        - quest
      summary: Get quest
      operationId: getQuest
      parameters:
        - name: questId
          in: path
          required: true
          schema:
            type: string
            format: UUID
            description: UUID of the quest to get
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestDto"
        '400':
          description: Invalid ID supplied
        '404':
          description: quest not found

    delete:
      tags:
        - quest
      summary: Delete quest
      operationId: deleteQuest
      parameters:
        - name: questId
          in: path
          required: true
          schema:
            type: string
            format: UUID
            description: UUID of the quest to delete
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Quest not found

  /api/quest:

    post:
      tags:
        - quest
      summary: Create quest
      operationId: createQuest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestDto"
      responses:
        '201':
          description: Quest created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestDto"
        '400':
          description: Invalid input

components:
  schemas:
    QuestionDto:
      type: object
      properties:
        id:
          type: string
        quest:
          type: string
          format: UUID
        type:
          type: string
          enum:
            - OPEN_ANSWER
            - ONE_ANSWER
            - SEVERAL_ANSWERS
        multimedia:
          type: string
        question:
          type: string
        answers:
          type: array
          items:
            type: string
        rightAnswersIndexes:
          type: array
          items:
            type: integer


    QuestDto:
      type: object
      properties:
        id:
          type: string
          format: UUID
        userId:
          type: string
          format: UUID
        reviewId:
          type: string
          format: UUID
        title:
          type: string
        description:
          type: string
        time_limit:
          type: integer
        average_rating:
          type: number
          format: float
        multimedia:
          type: string
        questions:
          type: array
          items:
            $ref: "#/components/schemas/QuestionDto"

      required:
        - userId
        - title
        - questions
